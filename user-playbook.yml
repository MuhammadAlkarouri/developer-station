---
- hosts: all
  vars:
    git_user_name: Muhammad Alkarouri
    git_user_email: muhammad.alkarouri@eaglegenomics.com
  roles:
    - gpg-agent
  tasks:
    - name: Ensure fish config directory exists
      file:
        path: ~/.config/fish/functions
        state: directory
    - name: Check if Oh My Fish is installed
      stat:
        path: /home/vagrant/.local/share/omf
      register: omf_share
    - name: Install Oh My Fish
      block:
        - get_url:
            url: https://get.oh-my.fish
            dest: /tmp/omf-install
            mode: 0555
        - command: fish /tmp/omf-install --noninteractive
      when: not omf_share.stat.exists
    - name: Change current user shell
      user: name={{ ansible_ssh_user }} shell=/usr/bin/fish
      become: yes
    - name: Install fish omf plugins
      command: fish -c "omf install {{ item.name }}"
      args:
        creates: "~/.local/share/omf/{{ item.path }}"
      loop:
        - { name: "https://github.com/simnalamburt/cgitc", path: "pkg/cgitc" }
        - { name: "bass", path: "pkg/bass" }
        - { name: "direnv", path: "pkg/direnv" }
        - { name: "lambda", path: "themes/lambda" }
    - name: Set user path
      command: fish -c "if contains ~/.local/bin $fish_user_paths; echo 'Already set'; else; set -U fish_user_paths ~/.local/bin $fish_user_paths; echo 'Path updated'; end"
      register: command_result
      changed_when: "command_result.stdout != 'Already set'"
    - name: Set git user name
      git_config:
        name: user.name
        scope: global
        value: "{{ git_user_name }}"
    - name: Set git user email
      git_config:
        name: user.email
        scope: global
        value: "{{ git_user_email }}"
    - name: Install latest pip3
      pip:
        name: pip
        executable: pip3
        extra_args: --user
        state: latest
    - name: Install some pip packages
      pip:
        name: "{{ item }}"
        executable: ~/.local/bin/pip
        extra_args: --user
        state: latest
      loop:
        - "pre-commit"
        - "cloudsmith-cli"
    - name: Ensure relevant directories exist
      file:
        path: "{{ item }}"
        state: directory
        recurse: yes
      loop:
        - "~/.config/kak"
    - name: Install tmux package manager
      git:
        repo: https://github.com/tmux-plugins/tpm
        dest: "~/.tmux/plugins/tpm"
    - name: Copy various configurations
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      loop:
        - { src: "kakrc", dest: "~/.config/kak/kakrc" }
        - { src: ".tmux.conf", dest: "~/.tmux.conf" }
